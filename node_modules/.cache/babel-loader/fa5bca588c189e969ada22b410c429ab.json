{"ast":null,"code":"var _jsxFileName = \"/home/sebastian/amares/src/App.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { TransitionGroup, Transition } from \"react-transition-group\";\nimport styled, { css, ThemeProvider } from \"styled-components\";\nimport { themeDark, themeLight } from \"themes\";\nimport GlobalStyle, { Device } from \"components/globalStyle\";\nimport Menu from \"components/menu\";\nimport Home from \"views/Home/Home\";\nconst Page = styled.div`\n    position: fixed;\n    z-index: 1;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    display: grid;\n    grid-template-columns: 0 1fr 0;\n    grid-template-rows: 1fr auto;\n\n    @media ${Device.laptop} {\n        grid-template-columns: 64px 1fr 320px;\n    }\n\n    @media ${Device.desktop} {\n        grid-template-columns: 256px 1fr 320px;\n    }\n`;\nconst Snackbar = styled.div`\n    position: fixed;\n    z-index: 100;\n    left: 0;\n    bottom: 0;\n    width: 100%;\n    min-height: 45px;\n    background: var(--on-background);\n    color: var(--on-secondary);\n    padding: 12px 16px;\n    border-radius: 5px;\n    box-shadow: 0px 2px 3px rgba(0, 0, 0, 0.3);\n    font-size: 13px;\n    font-size: 1.3rem;\n    line-height: 24px;\n    line-height: 2.4rem;\n    letter-spacing: 0.1px;\n    letter-spacing: 0.01rem;\n    font-weight: 400;\n    text-transform: inherit;\n    visibility: hidden;\n    transform: translateY(100%);\n    transition: 0.25s ease-in;\n\n    @media ${Device.laptop} {\n        width: auto;\n        min-width: 344px;\n        margin: 28px;\n    }\n\n    ${props => props.state === \"entered\" && css`\n            visibility: visible;\n            transform: translateY(0%);\n            transition: 0.3s ease-out;\n        `};\n`;\n\nconst App = function () {\n  const nodeRef = React.useRef(null);\n  const [snackbar, setSnackbar] = useState(\"\");\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [darkTheme, setDarkTheme] = useState(true);\n  useEffect(() => {}, []);\n  useEffect(() => {\n    if (snackbar !== \"\") {\n      setTimeout(function () {\n        setSnackbar(\"\");\n      }, 5500);\n    }\n  }, [snackbar]);\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: darkTheme ? themeDark : themeLight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GlobalStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Route, {\n    render: ({\n      location\n    }) => /*#__PURE__*/React.createElement(Page, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Menu, {\n      user: user,\n      setUser: setUser,\n      menuOpen: menuOpen,\n      setMenuOpen: setMenuOpen,\n      darkTheme: darkTheme,\n      setDarkTheme: setDarkTheme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(TransitionGroup, {\n      component: null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Transition, {\n      key: location.key,\n      timeout: 300,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 33\n      }\n    }, state => /*#__PURE__*/React.createElement(Switch, {\n      key: location.key,\n      location: location,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => /*#__PURE__*/React.createElement(Home, {\n        menuOpen: menuOpen,\n        setMenuOpen: setMenuOpen,\n        setSnackbar: setSnackbar,\n        state: state,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 53\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/turnos\",\n      render: () => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 63\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 45\n      }\n    }))))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Transition, {\n    nodeRef: nodeRef,\n    in: snackbar !== \"\",\n    addEndListener: (nodeRef, done) => {\n      nodeRef.addEventListener(\"transitionend\", done, false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, state => /*#__PURE__*/React.createElement(Snackbar, {\n    state: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 33\n    }\n  }, snackbar))));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/sebastian/amares/src/App.tsx"],"names":["React","useState","useEffect","BrowserRouter","Router","Route","Switch","TransitionGroup","Transition","styled","css","ThemeProvider","themeDark","themeLight","GlobalStyle","Device","Menu","Home","Page","div","laptop","desktop","Snackbar","props","state","App","nodeRef","useRef","snackbar","setSnackbar","menuOpen","setMenuOpen","darkTheme","setDarkTheme","setTimeout","location","user","setUser","key","done","addEventListener"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { TransitionGroup, Transition } from \"react-transition-group\";\nimport styled, { css, ThemeProvider } from \"styled-components\";\nimport { themeDark, themeLight } from \"themes\";\nimport GlobalStyle, { Device } from \"components/globalStyle\";\nimport Menu from \"components/menu\";\nimport Home from \"views/Home/Home\";\n\nconst Page = styled.div`\n    position: fixed;\n    z-index: 1;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    display: grid;\n    grid-template-columns: 0 1fr 0;\n    grid-template-rows: 1fr auto;\n\n    @media ${Device.laptop} {\n        grid-template-columns: 64px 1fr 320px;\n    }\n\n    @media ${Device.desktop} {\n        grid-template-columns: 256px 1fr 320px;\n    }\n`;\n\ntype StateProps = {\n    readonly state?: string;\n};\n\nconst Snackbar = styled.div<StateProps>`\n    position: fixed;\n    z-index: 100;\n    left: 0;\n    bottom: 0;\n    width: 100%;\n    min-height: 45px;\n    background: var(--on-background);\n    color: var(--on-secondary);\n    padding: 12px 16px;\n    border-radius: 5px;\n    box-shadow: 0px 2px 3px rgba(0, 0, 0, 0.3);\n    font-size: 13px;\n    font-size: 1.3rem;\n    line-height: 24px;\n    line-height: 2.4rem;\n    letter-spacing: 0.1px;\n    letter-spacing: 0.01rem;\n    font-weight: 400;\n    text-transform: inherit;\n    visibility: hidden;\n    transform: translateY(100%);\n    transition: 0.25s ease-in;\n\n    @media ${Device.laptop} {\n        width: auto;\n        min-width: 344px;\n        margin: 28px;\n    }\n\n    ${(props) =>\n        props.state === \"entered\" &&\n        css`\n            visibility: visible;\n            transform: translateY(0%);\n            transition: 0.3s ease-out;\n        `};\n`;\n\nconst App = function () {\n    const nodeRef = React.useRef(null);\n    const [snackbar, setSnackbar] = useState(\"\");\n    const [menuOpen, setMenuOpen] = useState(false);\n    const [darkTheme, setDarkTheme] = useState(true);\n\n    useEffect(() => {}, []);\n\n    useEffect(() => {\n        if (snackbar !== \"\") {\n            setTimeout(function () {\n                setSnackbar(\"\");\n            }, 5500);\n        }\n    }, [snackbar]);\n\n    return (\n        <Router>\n            <ThemeProvider theme={darkTheme ? themeDark : themeLight}>\n                <GlobalStyle />\n            </ThemeProvider>\n            <>\n                <Route\n                    render={({ location }) => (\n                        <Page>\n                            <Menu\n                                user={user}\n                                setUser={setUser}\n                                menuOpen={menuOpen}\n                                setMenuOpen={setMenuOpen}\n                                darkTheme={darkTheme}\n                                setDarkTheme={setDarkTheme}\n                            />\n                            <TransitionGroup component={null}>\n                                <Transition key={location.key} timeout={300}>\n                                    {(state) => (\n                                        <Switch\n                                            key={location.key}\n                                            location={location}\n                                        >\n                                            <Route\n                                                exact\n                                                path=\"/\"\n                                                render={() => (\n                                                    <Home\n                                                        menuOpen={menuOpen}\n                                                        setMenuOpen={\n                                                            setMenuOpen\n                                                        }\n                                                        setSnackbar={\n                                                            setSnackbar\n                                                        }\n                                                        state={state}\n                                                    />\n                                                )}\n                                            />\n                                            <Route\n                                                path=\"/turnos\"\n                                                render={() => <div />}\n                                            />\n                                        </Switch>\n                                    )}\n                                </Transition>\n                            </TransitionGroup>\n                        </Page>\n                    )}\n                />\n                <Transition\n                    nodeRef={nodeRef}\n                    in={snackbar !== \"\"}\n                    addEndListener={(nodeRef, done) => {\n                        nodeRef.addEventListener(\"transitionend\", done, false);\n                    }}\n                >\n                    {(state) => <Snackbar state={state}>{snackbar}</Snackbar>}\n                </Transition>\n            </>\n        </Router>\n    );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}