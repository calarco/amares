{"ast":null,"code":"var _jsxFileName = \"/home/sebastian/amares/src/App.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { TransitionGroup, Transition } from \"react-transition-group\";\nimport styled, { css, ThemeProvider } from \"styled-components\";\nimport { themeDark, themeLight } from \"themes\";\nimport GlobalStyle, { Device } from \"components/globalStyle\";\nimport Home from \"views/Home/Home\";\nimport logo from \"./amares-l.png\";\nconst Page = styled.div`\n    background-image: url(\"amares.jpg\");\n    background-size: cover;\n    background-position: center;\n    position: fixed;\n    z-index: 1;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n\n    @media ${Device.laptop} {\n    }\n\n    @media ${Device.desktop} {\n    }\n`;\nconst Header = styled.div`\n    img {\n        width: 100%;\n        max-width: 500px;\n        margin: 20px;\n    }\n`;\nconst Overlay = styled.div`\n    position: fixed;\n    top: 0;\n    z-index: 2;\n    inset: 0;\n    width: 100vw;\n    height: 100vh;\n    background: var(--primary);\n    opacity: 0;\n    visibility: hidden;\n    transition: 0.3s ease-in-out;\n\n    ${props => props.state === \"entered\" && css`\n            opacity: 0.8;\n            visibility: visible;\n        `};\n`;\nexport const Fab = styled.div`\n    position: fixed;\n    z-index: 3;\n    bottom: 0;\n    width: 100%;\n    padding: 16px;\n    height: 60px;\n    background: var(--secondary);\n    color: var(--on-secondary);\n    clip-path: polygon(\n        61% 1%,\n        81% 1%,\n        100% 0,\n        100% 100%,\n        0 100%,\n        0 3%,\n        12% 3%,\n        27% 2%,\n        43% 1%\n    );\n\n    transition: 0.25s ease-in;\n    text-align: center;\n    font-size: 24px;\n    font-size: 2.4rem;\n    line-height: 32px;\n    line-height: 3.2rem;\n    letter-spacing: 0px;\n    letter-spacing: 0rem;\n    font-weight: 300;\n\n    &:hover {\n        background-color: var(--secondary-variant);\n    }\n\n    ${props => props.state === \"entered\" && css`\n            height: 95%;\n            opacity: 1;\n            transform: scale(1);\n            transition: 0.3s ease-out;\n            background: var(--secondary-variant);\n        `};\n`;\nconst Side = styled.aside`\n    position: fixed;\n    z-index: 4;\n    height: 90%;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: start;\n    visibility: hidden;\n    bottom: -100%;\n    transition: 0.25s ease-in;\n    background: var(--secondary);\n    padding-top: 5%;\n    clip-path: polygon(\n        63% 1%,\n        81% 1%,\n        100% 0,\n        100% 100%,\n        0 100%,\n        0 4%,\n        13% 4%,\n        30% 3%,\n        53% 1%\n    );\n\n    @media ${Device.laptop} {\n    }\n\n    ${props => props.state === \"entered\" && css`\n            visibility: visible;\n            bottom: 0;\n            transition: 0.3s ease-out;\n        `};\n`;\nconst Snackbar = styled.div`\n    position: fixed;\n    z-index: 100;\n    left: 0;\n    bottom: 0;\n    width: 100%;\n    min-height: 45px;\n    background: var(--on-background);\n    color: var(--on-secondary);\n    padding: 12px 16px;\n    border-radius: 5px;\n    box-shadow: 0px 2px 3px rgba(0, 0, 0, 0.3);\n    font-size: 13px;\n    font-size: 1.3rem;\n    line-height: 24px;\n    line-height: 2.4rem;\n    letter-spacing: 0.1px;\n    letter-spacing: 0.01rem;\n    font-weight: 400;\n    text-transform: inherit;\n    visibility: hidden;\n    transform: translateY(100%);\n    transition: 0.25s ease-in;\n\n    @media ${Device.laptop} {\n        width: auto;\n        min-width: 344px;\n        margin: 28px;\n    }\n\n    ${props => props.state === \"entered\" && css`\n            visibility: visible;\n            transform: translateY(0%);\n            transition: 0.3s ease-out;\n        `};\n`;\n\nconst App = function () {\n  const nodeRef = React.useRef(null);\n  const [sideOpen, setSideOpen] = useState(false);\n  const [snackbar, setSnackbar] = useState(\"\");\n  const [darkTheme, setDarkTheme] = useState(true);\n  useEffect(() => {\n    setDarkTheme(true);\n  }, []);\n  useEffect(() => {\n    if (snackbar !== \"\") {\n      setTimeout(function () {\n        setSnackbar(\"\");\n      }, 5500);\n    }\n  }, [snackbar]);\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: darkTheme ? themeDark : themeLight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GlobalStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Route, {\n    render: ({\n      location\n    }) => /*#__PURE__*/React.createElement(Page, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      alt: \"Logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(TransitionGroup, {\n      component: null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Transition, {\n      key: location.key,\n      timeout: 300,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 33\n      }\n    }, state => /*#__PURE__*/React.createElement(Switch, {\n      key: location.key,\n      location: location,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => /*#__PURE__*/React.createElement(Home, {\n        state: state,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 53\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/turnos\",\n      render: () => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 63\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 45\n      }\n    })))), /*#__PURE__*/React.createElement(Transition, {\n      nodeRef: nodeRef,\n      in: sideOpen,\n      addEndListener: (nodeRef, done) => {\n        nodeRef.addEventListener(\"transitionend\", done, false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 29\n      }\n    }, state => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Overlay, {\n      state: state,\n      onClick: () => {\n        setSideOpen(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(Fab, {\n      state: state,\n      onClick: () => {\n        setSideOpen(!sideOpen);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 41\n      }\n    }, \"Encuentranos\"), /*#__PURE__*/React.createElement(Side, {\n      state: state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 41\n      }\n    }, \"Encu\\xE9ntranos en primera l\\xEDnea de playa y a dos cuadras del centro de la ciudad \\u2022 Donde estamos: muelle 1 Parador Cabo frio.\")))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Transition, {\n    nodeRef: nodeRef,\n    in: snackbar !== \"\",\n    addEndListener: (nodeRef, done) => {\n      nodeRef.addEventListener(\"transitionend\", done, false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 17\n    }\n  }, state => /*#__PURE__*/React.createElement(Snackbar, {\n    state: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 33\n    }\n  }, snackbar))));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/sebastian/amares/src/App.tsx"],"names":["React","useState","useEffect","BrowserRouter","Router","Route","Switch","TransitionGroup","Transition","styled","css","ThemeProvider","themeDark","themeLight","GlobalStyle","Device","Home","logo","Page","div","laptop","desktop","Header","Overlay","props","state","Fab","Side","aside","Snackbar","App","nodeRef","useRef","sideOpen","setSideOpen","snackbar","setSnackbar","darkTheme","setDarkTheme","setTimeout","location","key","done","addEventListener"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { TransitionGroup, Transition } from \"react-transition-group\";\nimport styled, { css, ThemeProvider } from \"styled-components\";\nimport { themeDark, themeLight } from \"themes\";\nimport GlobalStyle, { Device } from \"components/globalStyle\";\nimport Home from \"views/Home/Home\";\nimport logo from \"./amares-l.png\";\n\nconst Page = styled.div`\n    background-image: url(\"amares.jpg\");\n    background-size: cover;\n    background-position: center;\n    position: fixed;\n    z-index: 1;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n\n    @media ${Device.laptop} {\n    }\n\n    @media ${Device.desktop} {\n    }\n`;\n\nconst Header = styled.div`\n    img {\n        width: 100%;\n        max-width: 500px;\n        margin: 20px;\n    }\n`;\n\ntype StateProps = {\n    readonly state?: string;\n};\n\nconst Overlay = styled.div<StateProps>`\n    position: fixed;\n    top: 0;\n    z-index: 2;\n    inset: 0;\n    width: 100vw;\n    height: 100vh;\n    background: var(--primary);\n    opacity: 0;\n    visibility: hidden;\n    transition: 0.3s ease-in-out;\n\n    ${(props) =>\n        props.state === \"entered\" &&\n        css`\n            opacity: 0.8;\n            visibility: visible;\n        `};\n`;\n\nexport const Fab = styled.div<StateProps>`\n    position: fixed;\n    z-index: 3;\n    bottom: 0;\n    width: 100%;\n    padding: 16px;\n    height: 60px;\n    background: var(--secondary);\n    color: var(--on-secondary);\n    clip-path: polygon(\n        61% 1%,\n        81% 1%,\n        100% 0,\n        100% 100%,\n        0 100%,\n        0 3%,\n        12% 3%,\n        27% 2%,\n        43% 1%\n    );\n\n    transition: 0.25s ease-in;\n    text-align: center;\n    font-size: 24px;\n    font-size: 2.4rem;\n    line-height: 32px;\n    line-height: 3.2rem;\n    letter-spacing: 0px;\n    letter-spacing: 0rem;\n    font-weight: 300;\n\n    &:hover {\n        background-color: var(--secondary-variant);\n    }\n\n    ${(props) =>\n        props.state === \"entered\" &&\n        css`\n            height: 95%;\n            opacity: 1;\n            transform: scale(1);\n            transition: 0.3s ease-out;\n            background: var(--secondary-variant);\n        `};\n`;\n\nconst Side = styled.aside<StateProps>`\n    position: fixed;\n    z-index: 4;\n    height: 90%;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: start;\n    visibility: hidden;\n    bottom: -100%;\n    transition: 0.25s ease-in;\n    background: var(--secondary);\n    padding-top: 5%;\n    clip-path: polygon(\n        63% 1%,\n        81% 1%,\n        100% 0,\n        100% 100%,\n        0 100%,\n        0 4%,\n        13% 4%,\n        30% 3%,\n        53% 1%\n    );\n\n    @media ${Device.laptop} {\n    }\n\n    ${(props) =>\n        props.state === \"entered\" &&\n        css`\n            visibility: visible;\n            bottom: 0;\n            transition: 0.3s ease-out;\n        `};\n`;\n\nconst Snackbar = styled.div<StateProps>`\n    position: fixed;\n    z-index: 100;\n    left: 0;\n    bottom: 0;\n    width: 100%;\n    min-height: 45px;\n    background: var(--on-background);\n    color: var(--on-secondary);\n    padding: 12px 16px;\n    border-radius: 5px;\n    box-shadow: 0px 2px 3px rgba(0, 0, 0, 0.3);\n    font-size: 13px;\n    font-size: 1.3rem;\n    line-height: 24px;\n    line-height: 2.4rem;\n    letter-spacing: 0.1px;\n    letter-spacing: 0.01rem;\n    font-weight: 400;\n    text-transform: inherit;\n    visibility: hidden;\n    transform: translateY(100%);\n    transition: 0.25s ease-in;\n\n    @media ${Device.laptop} {\n        width: auto;\n        min-width: 344px;\n        margin: 28px;\n    }\n\n    ${(props) =>\n        props.state === \"entered\" &&\n        css`\n            visibility: visible;\n            transform: translateY(0%);\n            transition: 0.3s ease-out;\n        `};\n`;\n\nconst App = function () {\n    const nodeRef = React.useRef(null);\n    const [sideOpen, setSideOpen] = useState(false);\n    const [snackbar, setSnackbar] = useState(\"\");\n    const [darkTheme, setDarkTheme] = useState(true);\n\n    useEffect(() => {\n        setDarkTheme(true);\n    }, []);\n\n    useEffect(() => {\n        if (snackbar !== \"\") {\n            setTimeout(function () {\n                setSnackbar(\"\");\n            }, 5500);\n        }\n    }, [snackbar]);\n\n    return (\n        <Router>\n            <ThemeProvider theme={darkTheme ? themeDark : themeLight}>\n                <GlobalStyle />\n            </ThemeProvider>\n            <>\n                <Route\n                    render={({ location }) => (\n                        <Page>\n                            <Header>\n                                <img src={logo} alt=\"Logo\" />\n                            </Header>\n                            <TransitionGroup component={null}>\n                                <Transition key={location.key} timeout={300}>\n                                    {(state) => (\n                                        <Switch\n                                            key={location.key}\n                                            location={location}\n                                        >\n                                            <Route\n                                                exact\n                                                path=\"/\"\n                                                render={() => (\n                                                    <Home state={state} />\n                                                )}\n                                            />\n                                            <Route\n                                                path=\"/turnos\"\n                                                render={() => <div />}\n                                            />\n                                        </Switch>\n                                    )}\n                                </Transition>\n                            </TransitionGroup>\n                            <Transition\n                                nodeRef={nodeRef}\n                                in={sideOpen}\n                                addEndListener={(nodeRef, done) => {\n                                    nodeRef.addEventListener(\n                                        \"transitionend\",\n                                        done,\n                                        false\n                                    );\n                                }}\n                            >\n                                {(state) => (\n                                    <>\n                                        <Overlay\n                                            state={state}\n                                            onClick={() => {\n                                                setSideOpen(false);\n                                            }}\n                                        />\n                                        <Fab\n                                            state={state}\n                                            onClick={() => {\n                                                setSideOpen(!sideOpen);\n                                            }}\n                                        >\n                                            Encuentranos\n                                        </Fab>\n                                        <Side state={state}>\n                                            Encuéntranos en primera línea de\n                                            playa y a dos cuadras del centro de\n                                            la ciudad • Donde estamos: muelle 1\n                                            Parador Cabo frio.\n                                        </Side>\n                                    </>\n                                )}\n                            </Transition>\n                        </Page>\n                    )}\n                />\n                <Transition\n                    nodeRef={nodeRef}\n                    in={snackbar !== \"\"}\n                    addEndListener={(nodeRef, done) => {\n                        nodeRef.addEventListener(\"transitionend\", done, false);\n                    }}\n                >\n                    {(state) => <Snackbar state={state}>{snackbar}</Snackbar>}\n                </Transition>\n            </>\n        </Router>\n    );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}